name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

env:
  PROJECT_NAME: pez

jobs:
  build:
    name: Build ${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              os: ubuntu-latest,
              target: x86_64-unknown-linux-gnu,
              use-cross: false,
              extension: "",
            }
          - {
              os: ubuntu-latest,
              target: aarch64-unknown-linux-gnu,
              use-cross: true,
              extension: "",
            }
          - {
              os: macos-15-intel,
              target: x86_64-apple-darwin,
              use-cross: false,
              extension: "",
            }
          - {
              os: macos-latest,
              target: aarch64-apple-darwin,
              use-cross: false,
              extension: "",
            }
          - {
              os: windows-latest,
              target: x86_64-pc-windows-msvc,
              use-cross: false,
              extension: ".exe",
            }

    env:
      CARGO_TARGET_DIR: target/${{ matrix.job.target }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.job.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> ${{ env.CARGO_TARGET_DIR }}
          key: ${{ runner.os }}-${{ matrix.job.target }}

      - name: Install cross (only when needed)
        if: ${{ matrix.job.use-cross == true }}
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build (cargo or cross)
        run: |
          set -euxo pipefail
          if [[ "${{ matrix.job.use-cross }}" == "true" ]]; then
            cross build --release --target ${{ matrix.job.target }}
          else
            cargo build --release --target ${{ matrix.job.target }}
          fi

      - name: Package artifact
        run: |
          set -euxo pipefail
          mkdir -p dist
          BIN="${PROJECT_NAME}${{ matrix.job.extension }}"
          SRC="${CARGO_TARGET_DIR}/${{ matrix.job.target }}/release/${BIN}"
          OUT="${PROJECT_NAME}-${GITHUB_REF_NAME}-${{ matrix.job.target }}${{ matrix.job.extension }}"
          cp "$SRC" "dist/$OUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.job.target }}
          path: dist/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: artifact-*
          merge-multiple: true
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: dist/*
